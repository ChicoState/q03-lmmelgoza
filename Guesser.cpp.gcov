        -:    0:Source:Guesser.cpp
        -:    0:Graph:Guesser.gcno
        -:    0:Data:Guesser.gcda
        -:    0:Runs:1
        -:    1:#include "Guesser.h"
        -:    2:#include <string>
        -:    3:#include <cmath>
        -:    4:
        -:    5:using std::string;
        -:    6:
        -:    7:/*
        -:    8:  Returns an whole number representing the distance between the guess,
        -:    9:  provided as an argument, and the secret. The distance represents the number
        -:   10:  of characters that would have to be changed at the same location to match
        -:   11:  the other string. When the two strings are identical, the distance is 0,
        -:   12:  but for each letter different, the distance increases by 1. When the
        -:   13:  strings are different lengths, each of the extra characters in the longer
        -:   14:  string also counts as an increase in 1 to the distance, up to the length of
        -:   15:  the secret; in other words, if m_secret has a 10 characters and the guess
        -:   16:  has 100, the distance is 10.
        -:   17:*/
function _ZN7Guesser8distanceENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 7 returned 100% blocks executed 74%
        7:   18:unsigned int Guesser::distance(string guess){
        7:   19:  int length_diff = 0;
        7:   20:  if( guess.length() > m_secret.length() ){
call    0 returned 7
call    1 returned 7
branch  2 taken 0 (fallthrough)
branch  3 taken 7
    #####:   21:    length_diff += guess.length() - m_secret.length();
call    0 never executed
call    1 never executed
        -:   22:  }
        7:   23:  else if( guess.length() < m_secret.length() ){
call    0 returned 7
call    1 returned 7
branch  2 taken 0 (fallthrough)
branch  3 taken 7
    #####:   24:    length_diff += m_secret.length() - guess.length();
call    0 never executed
call    1 never executed
        -:   25:  }
       36:   26:  for(int i=0; i < m_secret.length() && i < guess.length(); i++ ){
call    0 returned 36
branch  1 taken 29 (fallthrough)
branch  2 taken 7
call    3 returned 29
branch  4 taken 29 (fallthrough)
branch  5 taken 0
branch  6 taken 29
branch  7 taken 7 (fallthrough)
       29:   27:    if( m_secret.at(i) != guess.at(i) ){
call    0 returned 29
call    1 returned 29
branch  2 taken 12 (fallthrough)
branch  3 taken 17
       12:   28:      length_diff++;
        -:   29:    }
        -:   30:  }
        7:   31:  if( length_diff > m_secret.length() ){
call    0 returned 7
branch  1 taken 0 (fallthrough)
branch  2 taken 7
    #####:   32:    length_diff = m_secret.length();
call    0 never executed
        -:   33:  }
        7:   34:  return length_diff;
        -:   35:}
        -:   36:
        -:   37:/*
        -:   38:  Constructor requires that the secret phrase is provided its value as
        -:   39:  an argument. This secret will not change for the lifespan of an instance
        -:   40:  of any Guesser object and must have a length of 32 characters or less,
        -:   41:  otherwise, it will be truncated at that length.
        -:   42:*/
function _ZN7GuesserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 6 returned 100% blocks executed 50%
        6:   43:Guesser::Guesser(string secret){
call    0 returned 6
        6:   44:  if( secret.length() > 32 ){
call    0 returned 6
branch  1 taken 0 (fallthrough)
branch  2 taken 6
    #####:   45:    m_secret = secret.substr(0, 32);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
call    3 never executed
call    4 never executed
        -:   46:  }
        -:   47:  else{
        6:   48:    m_secret = secret;
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        -:   49:  }
        6:   50:  m_locked = false;
        6:   51:  m_remaining = 3;
        6:   52:}
call    0 never executed
        -:   53:
        -:   54:/*
        -:   55:  Determines and returns whether the provided guess matches the secret
        -:   56:  phrase. However, the function also returns false if the secret is locked,
        -:   57:  which happens if either (or both): 
        -:   58:    (A) there are no remaining guesses allowed
        -:   59:    (B) the function detects brute force, as indicated by a guess that has a
        -:   60:        distance greater than 2 from the secret
        -:   61:  See the remaining() and distance() functions for specifications regarding
        -:   62:  determining how many guesses are remaining and the distance between a guess
        -:   63:  and the secret.
        -:   64:*/
function _ZN7Guesser5matchENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 10 returned 100% blocks executed 88%
       10:   65:bool Guesser::match(string guess){
       10:   66:  if( m_remaining < 1 || m_locked ){
branch  0 taken 9 (fallthrough)
branch  1 taken 1
branch  2 taken 1 (fallthrough)
branch  3 taken 8
        2:   67:    return false;
        -:   68:  }
        8:   69:  else if( guess != m_secret ){
call    0 returned 8
branch  1 taken 7 (fallthrough)
branch  2 taken 1
        7:   70:    unsigned int difference = distance(guess);
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 7
branch  4 taken 7 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 7
call    7 never executed
        7:   71:    if( difference > 2 ){
branch  0 taken 1 (fallthrough)
branch  1 taken 6
        1:   72:      m_locked = true;
        -:   73:    }
        -:   74:    else{
        6:   75:      m_remaining--;
        -:   76:    }
        7:   77:    return false;
        -:   78:  }
        -:   79:  else{
        1:   80:    return true;
        -:   81:  }
        -:   82:}
        -:   83:
        -:   84:/*
        -:   85:  Returns the number of guesses remaining. A Guesser object allows up to
        -:   86:  three (3) consecutive guesses without a match. If three guesses are made
        -:   87:  without any being a true match, the secret is locked. However, whenever
        -:   88:  an unlocked secret is guessed with a true match, the guesses remaining
        -:   89:  reset to three (3). If the secret is locked for any other reason, such
        -:   90:  as a big distance in a guess, the count of remaining guesses should still
        -:   91:  count down as usual to hide that the secret has been locked.
        -:   92:*/
function _ZN7Guesser9remainingEv called 5 returned 100% blocks executed 100%
        5:   93:unsigned int Guesser::remaining(){
        5:   94:  return m_remaining;
        -:   95:}
